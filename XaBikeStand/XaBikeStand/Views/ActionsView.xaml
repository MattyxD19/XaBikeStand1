<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:baseViewModel="clr-namespace:XaBikeStand.ViewModels;assembly=XaBikeStand"
             xmlns:CustomBehavior="clr-namespace:XaBikeStand.CustomBehaviors;assembly=XaBikeStand"
             baseViewModel:ViewModelLocator.AutoWireViewModel="true"
             x:Class="XaBikeStand.Views.ActionsView"
             Appearing="ContentPage_Appearing" 
             NavigationPage.HasNavigationBar="True">

    <ContentPage.Content>
        <StackLayout>
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.8*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="0.8*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>

                    <RowDefinition Height="0.05*" />
                    <RowDefinition Height="0.015*" />
                    <RowDefinition Height="0.015*" />
                    <RowDefinition Height="0.01*" />
                    <RowDefinition Height="0.015*" />
                    <RowDefinition Height="0.015*" />
                    <RowDefinition Height="0.015*" />
                    <RowDefinition Height="0.015*" />
                    <RowDefinition Height="0.075*" />

                </Grid.RowDefinitions>
                <Image x:Name="ScannerButton" Grid.Row="1" Grid.Column="4" Grid.ColumnSpan="1" Source="qrIcon.png" HorizontalOptions="Center" IsEnabled="{Binding IsLockIDEnabled}">
                    <Image.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding NavigateScannerViewCommand}" ></TapGestureRecognizer>
                    </Image.GestureRecognizers>
                </Image>
                <Entry
                    x:Name="BikeStandNumber"
                    Placeholder="Lock number"
                    Text="{Binding LockID}"
                    Keyboard="Numeric"
                    Grid.Row="1"
                    Grid.Column="1"
                    Grid.ColumnSpan="3"
                    IsEnabled="{Binding IsLockIDEnabled}">
                    <Entry.Behaviors>
                        <CustomBehavior:EventToCommandBehavior 
                            EventName="Focused" 
                            Command="{Binding LockIDFocusedCommand}" />
                    </Entry.Behaviors>
                </Entry>
                <Label x:Name="bikeStationLabel" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="3" VerticalOptions="End" Text="{Binding BikeStationText}" IsVisible="{Binding IsBikeStationVisible}" ></Label>
                <Label x:Name="LockErrorLabel" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="3" VerticalOptions="End"  Text="The bikestand could not be locked, please check the bikestand id" TextColor="Red" IsVisible="{Binding IsLockErrorVisible}" ></Label>
                <Label x:Name="UnlockErrorLabel" Grid.Row="0" Grid.Column="1"  Grid.ColumnSpan="3" VerticalOptions="End" Text="The bikestand could not be unlocked, plese try again" TextColor="Red" IsVisible="{Binding IsUnlockErrorVisible}" ></Label>
                <Button 
                    x:Name="UnlockBike" 
                    Text="Unlock Bike" 
                    Grid.Column="1"
                    Grid.ColumnSpan="2"
                    IsVisible="{Binding UnlockVisible}"
                    Command="{Binding UnlockCommand}"
                    CommandParameter="{Binding Source={x:Reference UnlockBike}}"
                    Grid.Row="2"/>
                
                <Button 
                    x:Name="LockBike" 
                    Text="Lock Bike"
                    Grid.Column="1"
                    Grid.ColumnSpan="2"
                    IsVisible="{Binding LockVisible}"
                    Command="{Binding LockCommand}" 
                    CommandParameter="{Binding Source={x:Reference LockBike}}"
                    Grid.Row="2"/>

                <Label 

                    Text="Share your bike with a friend"
                    IsVisible="{Binding IsAddFriendVisible}"
                    FontSize="18"
                    Grid.Column="1"
                    Grid.ColumnSpan="3"
                    Grid.Row="4"/>

                <Entry
                    x:Name="FriendEntry"
                    Placeholder="Username"
                    Grid.Column="1"
                    Grid.ColumnSpan="2"
                    Text="{Binding ShareUsername}"
                    Grid.Row="5"
                    IsVisible="{Binding IsAddFriendVisible}"
                    IsEnabled="{Binding IsAddFriendEnabled}">
                  
                    <Entry.Behaviors>
                        <CustomBehavior:EventToCommandBehavior 
                            EventName="Unfocused" 
                            Command="{Binding FriendEntryUnfocused}" />
                    </Entry.Behaviors>
                </Entry>

                <Button
                    x:Name="AddFriendButton"
                    Text="Add friend"
                    Grid.Column="1"
                    Grid.ColumnSpan="2"
                    Command="{Binding ShareWithFriendCommand}"
                    IsVisible="{Binding IsAddFriendVisible}"
                    IsEnabled="{Binding IsAddFriendEnabled}"
                    Grid.Row="6"/>
                <Label Text="{Binding SharedWithText}" IsVisible="{Binding IsShared}" FontSize="20" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="7" VerticalOptions="Center"></Label>
                <Image Source="TrashCanIcon.png"  Grid.Row="7" Grid.Column="3" Grid.ColumnSpan="1" IsVisible="{Binding IsShared}" VerticalOptions="End">
                    <Image.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding RemoveSharedCommand}" ></TapGestureRecognizer>
                    </Image.GestureRecognizers>
                </Image>
            </Grid>
            
        </StackLayout>
    </ContentPage.Content>
</ContentPage>